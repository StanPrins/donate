<?php
// auto-generated by sfPropelCrud
// date: 2009/07/22 06:54:58
?>
<?php

/**
 * school actions.
 *
 * @package    donate
 * @subpackage school
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class schoolActions extends sfActions
{
	public function executeList()
	{
		//$this->schools = SchoolPeer::doSelect($c);
		$c = new Criteria();
	    $pager = new sfPropelPager('School', sfConfig::get('app_pager_homepage_max'));
		$pager->setCriteria($c);
		$pager->setPage($this->getRequestParameter('page', 1));
		$pager->init();
		$this->pager = $pager;
	}
	
	public function executeListsite()
	{
		$c = new Criteria();
        $c -> add(SchoolPeer::SITE_ID, $this->getRequestParameter('site_id'));
	    $pager = new sfPropelPager('School', sfConfig::get('app_pager_homepage_max'));
		$pager->setCriteria($c);
		$pager->setPage($this->getRequestParameter('page', 1));
		$pager->init();
		$this->pager = $pager;
		
		$d = new Criteria();
		$d -> add(ProjectSitePeer::SITE_ID, $this->getRequestParameter('site_id'));
		$this->projectsite = ProjectSitePeer::doSelectOne($d);
	}
	

	public function executeShow()
	{
		$this->school = SchoolPeer::retrieveByPk($this->getRequestParameter('school_id'));
		$this->forward404Unless($this->school);
	}

	public function executeCreate()
	{
		$this->school = new School();
		$c = new Criteria();
		$c->addAscendingOrderByColumn(ProjectSitePeer::SITE_NAME);
		$this->site = ProjectSitePeer::doSelect($c);
		$this->projectsite = ProjectSitePeer::retrieveByPk($this->getRequestParameter('site_id')); 

	}

	public function executeEdit()
	{
		$this->school = SchoolPeer::retrieveByPk($this->getRequestParameter('school_id'));
		$c = new Criteria();
		$c->addAscendingOrderByColumn(ProjectSitePeer::SITE_NAME);
		$this->site = ProjectSitePeer::doSelect($c);		
		$this->forward404Unless($this->school);
	}

	public function executeUpdate()
	{
		if (!$this->getRequestParameter('school_id'))
		{
			$school = new School();
		}
		else
		{
			$school = SchoolPeer::retrieveByPk($this->getRequestParameter('school_id'));
			$this->forward404Unless($school);
		}

		$school->setSchoolId($this->getRequestParameter('school_id'));
		$school->setSiteId($this->getRequestParameter('site_id') ? $this->getRequestParameter('site_id') : null);
		$school->setSchoolName($this->getRequestParameter('school_name'));
		$school->setType($this->getRequestParameter('type'));
		$school->setMaster($this->getRequestParameter('master'));
		$school->setContact($this->getRequestParameter('contact'));
		$school->setPhone($this->getRequestParameter('phone'));
		$school->setAddress($this->getRequestParameter('address'));
		$school->setPostal($this->getRequestParameter('postal'));
		$school->setDiscription($this->getRequestParameter('discription'));

		$school->save();

		return $this->redirect('school/show?school_id='.$school->getSchoolId().'&after_edit=1');
	}

	public function executeDelete()
	{
		$school = SchoolPeer::retrieveByPk($this->getRequestParameter('school_id'));

		$this->forward404Unless($school);

		$school->delete();

		return $this->redirect('school/list');
	}
	public function handleErrorUpdate()
	{
		$school_id = $this->getRequestParameter('school_id');
		if(empty($school_id))
		{
			return $this->forward('school','create');
		}
		else
		{
			$this->getRequest()->setParameter('school_id',$school_id);
	    	return $this->forward('school','edit');
		}
	}
}
