<?php
// auto-generated by sfPropelCrud
// date: 2009/09/03 02:12:34
?>
<?php

/**
 * comment actions.
 *
 * @package    qqchong
 * @subpackage comment
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class commentActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('comment', 'list');
  }

  public function executeList()
  {
  	$c = new Criteria();
  	if($this->getRequestParameter('blog_id'))
  		$c->add(CommentPeer::BLOG_ID,$this->getRequestParameter('blog_id'));
  	if($this->getRequestParameter('topic_id'))
  		$c->add(CommentPeer::TOPIC_ID,$this->getRequestParameter('topic_id'));
  	$c->addDescendingOrderByColumn(CommentPeer::CREATED_AT);
    $this->comments = CommentPeer::doSelect($c);
    $this->cNum = CommentPeer::doCount($c);
  }

  public function executeShow()
  {
    $this->comment = CommentPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->comment);
  }

  public function executeCreate()
  {
    $this->comment = new Comment();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->comment = CommentPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->comment);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $comment = new Comment();
    }
    else
    {
      $comment = CommentPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($comment);
    }

    $comment->setId($this->getRequestParameter('id'));
    $comment->setBlogId($this->getRequestParameter('blog_id') ? $this->getRequestParameter('blog_id') : null);
    $comment->setTopicId($this->getRequestParameter('topic_id') ? $this->getRequestParameter('topic_id') : null);
    $comment->setUserId($this->getUser()->getAttribute('user_id'));
    $comment->setContent($this->getRequestParameter('content'));

    $comment->save();
	
    if($this->getRequestParameter('topic_id'))
    	return $this->redirect('topic/show?id='.$this->getRequestParameter('topic_id'));
    if($this->getRequestParameter('blog_id'))
    	return $this->redirect('blog/show?id='.$this->getRequestParameter('blog_id'));
  }

  public function executeDelete()
  {
    $comment = CommentPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($comment);

    $comment->delete();

    return $this->redirect('comment/list');
  }
}
