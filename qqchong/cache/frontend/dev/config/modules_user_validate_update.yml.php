<?php
// auto-generated by sfValidatorConfigHandler
// date: 2009/09/18 15:54:57

if ($_SERVER['REQUEST_METHOD'] == 'GET')
{
  $validators = array();
  $context->getRequest()->setAttribute('fillin', array (
  'enabled' => true,
), 'symfony/filter');
}
else if ($_SERVER['REQUEST_METHOD'] == 'POST')
{
  $validators = array();
  $validators['sfEmailValidator_username'] = new sfEmailValidator();
  $validators['sfEmailValidator_username']->initialize($context, array (
  'strict' => true,
  'email_error' => 'Invalid Email Address',
));
  $validators['sfPropelUniqueValidator_username'] = new sfPropelUniqueValidator();
  $validators['sfPropelUniqueValidator_username']->initialize($context, array (
  'class' => 'User',
  'column' => 'username',
  'unique_error' => 'The Email was Registered',
));
  $validators['sfStringValidator_nickname'] = new sfStringValidator();
  $validators['sfStringValidator_nickname']->initialize($context, array (
  'max' => 16,
  'max_error' => 'At most 16 chars',
));
  $validators['sfStringValidator_name'] = new sfStringValidator();
  $validators['sfStringValidator_name']->initialize($context, array (
  'max' => 16,
  'max_error' => 'At most 16 chars',
));
  $validators['sfFileValidator_photo'] = new sfFileValidator();
  $validators['sfFileValidator_photo']->initialize($context, array (
  'mime_types' => 
  array (
    0 => 'image/jpeg',
    1 => 'image/png',
    2 => 'image/x-png',
    3 => 'image/pjpeg',
    4 => 'image/bmp',
    5 => 'image/gif',
  ),
  'mime_types_error' => 'Just bmp, jpeg, png and gif format',
  'max_size' => 512000,
  'max_size_error' => 'Larger than 512KB',
));
  $validators['sfStringValidator_duty'] = new sfStringValidator();
  $validators['sfStringValidator_duty']->initialize($context, array (
  'max' => 256,
  'max_error' => 'At most 256 chars',
));
  $validators['sfStringValidator_mobile'] = new sfStringValidator();
  $validators['sfStringValidator_mobile']->initialize($context, array (
  'max' => 16,
  'max_error' => 'At most 16 chars',
));
  $validators['sfStringValidator_tel'] = new sfStringValidator();
  $validators['sfStringValidator_tel']->initialize($context, array (
  'max' => 16,
  'max_error' => 'At most 16 chars',
));
  $validators['sfStringValidator_twitter'] = new sfStringValidator();
  $validators['sfStringValidator_twitter']->initialize($context, array (
  'max' => 256,
  'max_error' => 'At most 256 chars',
));
  $validators['sfStringValidator_qq'] = new sfStringValidator();
  $validators['sfStringValidator_qq']->initialize($context, array (
  'max' => 32,
  'max_error' => 'At most 32 chars',
));
  $validators['sfStringValidator_msn'] = new sfStringValidator();
  $validators['sfStringValidator_msn']->initialize($context, array (
  'max' => 32,
  'max_error' => 'At most 32 chars',
));
  $validatorManager->registerName('username', 1, 'Please enter your Email Address', null, null, false);
  $validatorManager->registerValidator('username', $validators['sfEmailValidator_username'], null);
  $validatorManager->registerValidator('username', $validators['sfPropelUniqueValidator_username'], null);
  $validatorManager->registerName('nickname', 1, 'Please enter your nickname', null, null, false);
  $validatorManager->registerValidator('nickname', $validators['sfStringValidator_nickname'], null);
  $validatorManager->registerName('name', 1, 'Please enter your name', null, null, false);
  $validatorManager->registerValidator('name', $validators['sfStringValidator_name'], null);
  $validatorManager->registerName('photo', 0, 'Required', null, null, 1);
  $validatorManager->registerValidator('photo', $validators['sfFileValidator_photo'], null);
  $validatorManager->registerName('duty', 0, 'Required', null, null, false);
  $validatorManager->registerValidator('duty', $validators['sfStringValidator_duty'], null);
  $validatorManager->registerName('mobile', 0, 'Required', null, null, false);
  $validatorManager->registerValidator('mobile', $validators['sfStringValidator_mobile'], null);
  $validatorManager->registerName('tel', 0, 'Required', null, null, false);
  $validatorManager->registerValidator('tel', $validators['sfStringValidator_tel'], null);
  $validatorManager->registerName('twitter', 0, 'Required', null, null, false);
  $validatorManager->registerValidator('twitter', $validators['sfStringValidator_twitter'], null);
  $validatorManager->registerName('qq', 0, 'Required', null, null, false);
  $validatorManager->registerValidator('qq', $validators['sfStringValidator_qq'], null);
  $validatorManager->registerName('msn', 0, 'Required', null, null, false);
  $validatorManager->registerValidator('msn', $validators['sfStringValidator_msn'], null);
  $context->getRequest()->setAttribute('fillin', array (
  'enabled' => true,
), 'symfony/filter');
}
